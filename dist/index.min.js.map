{"version":3,"sources":["index.js"],"names":["apiKey","imgApi","concat","document","getElementById","searchUrl","form","result","page","fetchData","url","response","regeneratorRuntime","async","_context","prev","next","awrap","fetch","sent","ok","Error","json","abrupt","t0","stop","data","_context2","results","showResults","createMovieCard","movie","poster_path","original_title","release_date","overview","imagePath","truncatedTitle","length","slice","formattedDate","clearResults","item","newContent","map","join","innerHTML","loadMoreResults","searchTerm","_context3","isSearching","cardTemplate","_document$documentEle","documentElement","scrollTop","clientHeight","scrollHeight","handleSearch","e","newUrl","_context4","preventDefault","query","value","init","_context5","addEventListener","window","detectEnd"],"mappings":"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","file":"index.min.js","sourcesContent":["const apiKey = \"10cf9ce4a63505fa38196e2544e87774\";\nconst imgApi = \"https://image.tmdb.org/t/p/w1280\";\nconst searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=`;\nconst form = document.getElementById(\"search-form\");\nconst query = document.getElementById(\"search-input\");\nconst result = document.getElementById(\"result\");\n\nlet page = 1;\nlet isSearching = false;\n\n// Fetch JSON data from url\nasync function fetchData(url) {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok.\");\n        }\n        return await response.json();\n    } catch (error) {\n        return null;\n    }\n}\n\n// Fetch and show results based on url\nasync function fetchAndShowResult(url) {\n    const data = await fetchData(url);\n    if (data && data.results) {\n        showResults(data.results);\n    }\n}\n\n// Create movie card html template\nfunction createMovieCard(movie) {\n    const { poster_path, original_title, release_date, overview } = movie;\n    const imagePath = poster_path ? imgApi + poster_path : \"./img-01.jpeg\";\n    const truncatedTitle = original_title.length > 15 ? original_title.slice(0, 15) + \"...\" : original_title;\n    const formattedDate = release_date || \"No release date\";\n    const cardTemplate = `\n        <div class=\"column\">\n            <div class=\"card\">\n                <a class=\"card-media\" href=\"./img-01.jpeg\">\n                    <img src=\"${imagePath}\" alt=\"${original_title}\" width=\"100%\" />\n                </a>\n                <div class=\"card-content\">\n                    <div class=\"card-header\">\n                        <div class=\"left-content\">\n                        <h3 style=\"font-weight: 600\">${truncatedTitle}</h3>\n                        <span style=\"color: #12efec\">${formattedDate}</span>\n                        </div>\n                    <div class=\"right-content\">\n                        <a href=\"${imagePath}\" target=\"_blank\" class=\"card-btn\">See Cover</a>\n                    </div>\n                </div>\n                <div class=\"info\">\n                    ${overview || \"No overview yet...\"}\n                </div>\n            </div>\n        </div>\n    </div>\n    `;\n    return cardTemplate;\n}\n\n// Clear result element for search\nfunction clearResults() {\n    result.innerHTML = \"\";\n}\n\n// Show results in page\nfunction showResults(item) {\n    const newContent = item.map(createMovieCard).join(\"\");\n    result.innerHTML += newContent || \"<p>No results found.</p>\";\n}\n\n// Load more results\nasync function loadMoreResults() {\n    if (isSearching) {\n        return;\n    }\n    page++;\n    const searchTerm = query.value;\n    const url = searchTerm ? `${searchUrl}${searchTerm}&page=${page}` : `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}&page=${page}`;\n    await fetchAndShowResult(url);\n}\n\n// Detect end of page and load more results\nfunction detectEnd() {\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\n    if (scrollTop + clientHeight >= scrollHeight - 20) {\n        loadMoreResults();\n    }\n}\n\n// Handle search\nasync function handleSearch(e) {\n    e.preventDefault();\n    const searchTerm = query.value.trim();\n    if (searchTerm) {\n        isSearching = true;\n        clearResults();\n        const newUrl = `${searchUrl}${searchTerm}&page=${page}`;\n        await fetchAndShowResult(newUrl);\n        query.value = \"\";\n    }\n}\n\n// Event listeners\nform.addEventListener('submit', handleSearch);\nwindow.addEventListener('scroll', detectEnd);\nwindow.addEventListener('resize', detectEnd);\n\n// Initialize the page\nasync function init() {\n    clearResults();\n    const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}&page=${page}`;\n    isSearching = false;\n    await fetchAndShowResult(url);\n}\n\ninit();"]}
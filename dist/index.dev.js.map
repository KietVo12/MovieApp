{"version":3,"sources":["index.js"],"names":["apiKey","imgApi","searchUrl","form","document","getElementById","query","result","page","isSearching","fetchData","url","fetch","response","ok","Error","json","fetchAndShowResult","data","results","showResults","createMovieCard","movie","poster_path","original_title","release_date","overview","imagePath","truncatedTitle","length","slice","formattedDate","cardTemplate","clearResults","innerHTML","item","newContent","map","join","loadMoreResults","searchTerm","value","detectEnd","documentElement","scrollTop","clientHeight","scrollHeight","handleSearch","e","preventDefault","trim","newUrl","addEventListener","window","init"],"mappings":"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","sourcesContent":["const apiKey = \"10cf9ce4a63505fa38196e2544e87774\";\nconst imgApi = \"https://image.tmdb.org/t/p/w1280\";\nconst searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=`;\nconst form = document.getElementById(\"search-form\");\nconst query = document.getElementById(\"search-input\");\nconst result = document.getElementById(\"result\");\n\nlet page = 1;\nlet isSearching = false;\n\n// Fetch JSON data from url\nasync function fetchData(url) {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok.\");\n        }\n        return await response.json();\n    } catch (error) {\n        return null;\n    }\n}\n\n// Fetch and show results based on url\nasync function fetchAndShowResult(url) {\n    const data = await fetchData(url);\n    if (data && data.results) {\n        showResults(data.results);\n    }\n}\n\n// Create movie card html template\nfunction createMovieCard(movie) {\n    const { poster_path, original_title, release_date, overview } = movie;\n    const imagePath = poster_path ? imgApi + poster_path : \"./img-01.jpeg\";\n    const truncatedTitle = original_title.length > 15 ? original_title.slice(0, 15) + \"...\" : original_title;\n    const formattedDate = release_date || \"No release date\";\n    const cardTemplate = `\n        <div class=\"column\">\n            <div class=\"card\">\n                <a class=\"card-media\" href=\"./img-01.jpeg\">\n                    <img src=\"${imagePath}\" alt=\"${original_title}\" width=\"100%\" />\n                </a>\n                <div class=\"card-content\">\n                    <div class=\"card-header\">\n                        <div class=\"left-content\">\n                        <h3 style=\"font-weight: 600\">${truncatedTitle}</h3>\n                        <span style=\"color: #12efec\">${formattedDate}</span>\n                        </div>\n                    <div class=\"right-content\">\n                        <a href=\"${imagePath}\" target=\"_blank\" class=\"card-btn\">See Cover</a>\n                    </div>\n                </div>\n                <div class=\"info\">\n                    ${overview || \"No overview yet...\"}\n                </div>\n            </div>\n        </div>\n    </div>\n    `;\n    return cardTemplate;\n}\n\n// Clear result element for search\nfunction clearResults() {\n    result.innerHTML = \"\";\n}\n\n// Show results in page\nfunction showResults(item) {\n    const newContent = item.map(createMovieCard).join(\"\");\n    result.innerHTML += newContent || \"<p>No results found.</p>\";\n}\n\n// Load more results\nasync function loadMoreResults() {\n    if (isSearching) {\n        return;\n    }\n    page++;\n    const searchTerm = query.value;\n    const url = searchTerm ? `${searchUrl}${searchTerm}&page=${page}` : `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}&page=${page}`;\n    await fetchAndShowResult(url);\n}\n\n// Detect end of page and load more results\nfunction detectEnd() {\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\n    if (scrollTop + clientHeight >= scrollHeight - 20) {\n        loadMoreResults();\n    }\n}\n\n// Handle search\nasync function handleSearch(e) {\n    e.preventDefault();\n    const searchTerm = query.value.trim();\n    if (searchTerm) {\n        isSearching = true;\n        clearResults();\n        const newUrl = `${searchUrl}${searchTerm}&page=${page}`;\n        await fetchAndShowResult(newUrl);\n        query.value = \"\";\n    }\n}\n\n// Event listeners\nform.addEventListener('submit', handleSearch);\nwindow.addEventListener('scroll', detectEnd);\nwindow.addEventListener('resize', detectEnd);\n\n// Initialize the page\nasync function init() {\n    clearResults();\n    const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}&page=${page}`;\n    isSearching = false;\n    await fetchAndShowResult(url);\n}\n\ninit();"],"file":"index.dev.js"}